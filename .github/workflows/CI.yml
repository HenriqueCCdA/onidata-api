name: Backend

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      max-parallel: 1
      matrix:
        python-version: ['3.12']

    services:
      postgres:
        image: postgres:16.1
        env:
          POSTGRES_USER: user
          POSTGRES_PASSWORD: 123456
        ports: [ '5432:5432' ]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install poetry
        poetry install --no-root

    - name: Look for auto format errors
      run:  poetry run black --check --diff app

    - name: Check for import style
      run:  poetry run ruff check app

    - name: Copying configurations
      run: cp .env_samples .env

    - name: Tests
      run: poetry run pytest app --junitxml=test-result.xml --cov=app --cov-report=xml

    #TODO: Configura o codecov
    # - name: Upload coverage reports to Codecov with GitHub Action
    #   uses: codecov/codecov-action@v3
    #   env:
    #     CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
